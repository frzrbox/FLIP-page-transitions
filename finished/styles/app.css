:root {
	--font-family: 'Inconsolata', monospace;
	--color-text: black;
	--color-primary: #1abc9c;
	--color-backgroud: #ecf0f1;
}

html {
	box-sizing: border-box;
}

*,
*::before,
*::after {
	box-sizing: inherit;
	color: var(--color-text);
}

body {
	margin: 0;
	padding: 0;
	background: var(--color-backgroud);
	font-family: var(--font-family);
}

p {
	max-width: 75ch;
}

a {
	text-decoration: none;
	width: fit-content;
}

a:hover,
a:hover * {
	color: var(--color-primary);
}

img {
	max-width: 100%;
}

.visually-hidden {
	clip: rect(0 0 0 0);
	clip-path: inset(50%);
	height: 1px;
	overflow: hidden;
	position: absolute;
	white-space: nowrap;
	width: 1px;
}

.container {
	max-width: 1200px;
	width: 95%;
	margin: 0 auto;
}

.container[data-size='large'] {
	max-width: 1600px;
}

.headline {
	font-size: 3.5vw;
}

/* Homepaged */
.projects-container {
	padding: 20vh 0;
	text-align: center;
}

.project {
	position: relative;
	z-index: 20;
}

.project-image {
	--size: 20vw;
	position: fixed;
	top: 0;
	left: 0;
	pointer-events: none;
	z-index: -1;
	opacity: 0;
	height: auto;
	width: var(--size);
	transform: translate3d(-50%, -50%, 0) translate3d(var(--x), var(--y), 0);
	transition: opacity 0.1s linear, transform 0.3s ease-out;
}

.project:hover .project-image {
	opacity: 1;
}

/* Project Page */
.project-hero {
	--flip-duration: 1.2s;

	display: flex;
	flex-wrap: wrap;
	align-items: flex-end;
}

.project-hero img {
	height: 60vh;
	width: auto;
	margin-right: 20px;
	animation: heroFLIP var(--flip-duration) cubic-bezier(0.45, 0.05, 0.55, 0.95)
		both;
}

.project-hero .content {
	opacity: 1;
	animation: fadeInUp 0.3s var(--flip-duration) both;
}

@keyframes fadeInUp {
	0% {
		opacity: 0;
		transform: translateY(50px);
	}
}

@keyframes heroFLIP {
	0% {
		--deltaW: var(--deltaW);
		--deltaH: var(--deltaH);
		--deltaX: var(--deltaX);

		position: fixed;
		top: 0;
		left: 0;
		transform-origin: top left;
		transform: translate(var(--deltaX), var(--deltaY))
			scale(var(--deltaW), var(--deltaH));
	}
	1% {
		position: relative;
	}
	70% {
		transform: translate(0, 0) scale(var(--deltaW), var(--deltaH));
		transform-origin: bottom left;
	}
	100% {
		transform: none;
		transform-origin: bottom left;
	}
}
